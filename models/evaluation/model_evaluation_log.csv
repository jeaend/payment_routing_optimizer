Model_Name,Confusion_Matrix,PR_AUC,F1_Score_Overall,Precision_Overall,Recall_Overall,Class_Metrics,Train_Score,Validation_Score,Notes,Hyperparameters
xgboost_baseline_model,"[[8037, 125], [1808, 112]]",0.287946824924631,0.10384793694946685,0.47257383966244726,0.058333333333333334,"{""Failure (0)"": {""precision"": 0.8163534789233113, ""recall"": 0.9846851261945602, ""f1-score"": 0.8926528572221913, ""support"": 8162.0}, ""Success (1)"": {""precision"": 0.47257383966244726, ""recall"": 0.058333333333333334, ""f1-score"": 0.10384793694946685, ""support"": 1920.0}, ""accuracy"": 0.8082721682205911, ""macro avg"": {""precision"": 0.6444636592928793, ""recall"": 0.5215092297639468, ""f1-score"": 0.4982503970858291, ""support"": 10082.0}, ""weighted avg"": {""precision"": 0.7508846327240594, ""recall"": 0.8082721682205911, ""f1-score"": 0.7424341062874927, ""support"": 10082.0}}",0.8052717714739139,0.8082721682205911,"Baseline Model, Vanilla XGBoost.","{""memory"": ""None"", ""steps"": ""[('preprocessor', ColumnTransformer(transformers=[('log_and_scale',\n                                 Pipeline(steps=[('log',\n                                                  FunctionTransformer(func=<function log_transform at 0x146c3d1c0>,\n                                                                      validate=True)),\n                                                 ('scaler', StandardScaler())]),\n                                 ['amount']),\n                                ('cat', OneHotEncoder(),\n                                 ['country', 'card', 'psp']),\n                                ('binary', 'passthrough', ['3d_secured'])])), ('classifier', XGBClassifier(base_score=None, booster=None, callbacks=None,\n              colsample_bylevel=None, colsample_bynode=None,\n              colsample_bytree=None, device=None, early_stopping_rounds=None,\n              enable_categorical=False, eval_metric=None, feature_types=None,\n              gamma=None, grow_policy=None, importance_type=None,\n              interaction_constraints=None, learning_rate=None, max_bin=None,\n              max_cat_threshold=None, max_cat_to_onehot=None,\n              max_delta_step=None, max_depth=None, max_leaves=None,\n              min_child_weight=None, missing=nan, monotone_constraints=None,\n              multi_strategy=None, n_estimators=100, n_jobs=None,\n              num_parallel_tree=None, random_state=42, ...))]"", ""verbose"": ""False"", ""preprocessor"": ""ColumnTransformer(transformers=[('log_and_scale',\n                                 Pipeline(steps=[('log',\n                                                  FunctionTransformer(func=<function log_transform at 0x146c3d1c0>,\n                                                                      validate=True)),\n                                                 ('scaler', StandardScaler())]),\n                                 ['amount']),\n                                ('cat', OneHotEncoder(),\n                                 ['country', 'card', 'psp']),\n                                ('binary', 'passthrough', ['3d_secured'])])"", ""classifier"": ""XGBClassifier(base_score=None, booster=None, callbacks=None,\n              colsample_bylevel=None, colsample_bynode=None,\n              colsample_bytree=None, device=None, early_stopping_rounds=None,\n              enable_categorical=False, eval_metric=None, feature_types=None,\n              gamma=None, grow_policy=None, importance_type=None,\n              interaction_constraints=None, learning_rate=None, max_bin=None,\n              max_cat_threshold=None, max_cat_to_onehot=None,\n              max_delta_step=None, max_depth=None, max_leaves=None,\n              min_child_weight=None, missing=nan, monotone_constraints=None,\n              multi_strategy=None, n_estimators=100, n_jobs=None,\n              num_parallel_tree=None, random_state=42, ...)"", ""preprocessor__n_jobs"": ""None"", ""preprocessor__remainder"": ""drop"", ""preprocessor__sparse_threshold"": ""0.3"", ""preprocessor__transformer_weights"": ""None"", ""preprocessor__transformers"": ""[('log_and_scale', Pipeline(steps=[('log',\n                 FunctionTransformer(func=<function log_transform at 0x146c3d1c0>,\n                                     validate=True)),\n                ('scaler', StandardScaler())]), ['amount']), ('cat', OneHotEncoder(), ['country', 'card', 'psp']), ('binary', 'passthrough', ['3d_secured'])]"", ""preprocessor__verbose"": ""False"", ""preprocessor__verbose_feature_names_out"": ""True"", ""preprocessor__log_and_scale"": ""Pipeline(steps=[('log',\n                 FunctionTransformer(func=<function log_transform at 0x146c3d1c0>,\n                                     validate=True)),\n                ('scaler', StandardScaler())])"", ""preprocessor__cat"": ""OneHotEncoder()"", ""preprocessor__binary"": ""passthrough"", ""preprocessor__log_and_scale__memory"": ""None"", ""preprocessor__log_and_scale__steps"": ""[('log', FunctionTransformer(func=<function log_transform at 0x146c3d1c0>, validate=True)), ('scaler', StandardScaler())]"", ""preprocessor__log_and_scale__verbose"": ""False"", ""preprocessor__log_and_scale__log"": ""FunctionTransformer(func=<function log_transform at 0x146c3d1c0>, validate=True)"", ""preprocessor__log_and_scale__scaler"": ""StandardScaler()"", ""preprocessor__log_and_scale__log__accept_sparse"": ""False"", ""preprocessor__log_and_scale__log__check_inverse"": ""True"", ""preprocessor__log_and_scale__log__feature_names_out"": ""None"", ""preprocessor__log_and_scale__log__func"": ""<function log_transform at 0x146c3d1c0>"", ""preprocessor__log_and_scale__log__inv_kw_args"": ""None"", ""preprocessor__log_and_scale__log__inverse_func"": ""None"", ""preprocessor__log_and_scale__log__kw_args"": ""None"", ""preprocessor__log_and_scale__log__validate"": ""True"", ""preprocessor__log_and_scale__scaler__copy"": ""True"", ""preprocessor__log_and_scale__scaler__with_mean"": ""True"", ""preprocessor__log_and_scale__scaler__with_std"": ""True"", ""preprocessor__cat__categories"": ""auto"", ""preprocessor__cat__drop"": ""None"", ""preprocessor__cat__dtype"": ""<class 'numpy.float64'>"", ""preprocessor__cat__feature_name_combiner"": ""concat"", ""preprocessor__cat__handle_unknown"": ""error"", ""preprocessor__cat__max_categories"": ""None"", ""preprocessor__cat__min_frequency"": ""None"", ""preprocessor__cat__sparse"": ""deprecated"", ""preprocessor__cat__sparse_output"": ""True"", ""classifier__objective"": ""binary:logistic"", ""classifier__base_score"": ""None"", ""classifier__booster"": ""None"", ""classifier__callbacks"": ""None"", ""classifier__colsample_bylevel"": ""None"", ""classifier__colsample_bynode"": ""None"", ""classifier__colsample_bytree"": ""None"", ""classifier__device"": ""None"", ""classifier__early_stopping_rounds"": ""None"", ""classifier__enable_categorical"": ""False"", ""classifier__eval_metric"": ""None"", ""classifier__feature_types"": ""None"", ""classifier__gamma"": ""None"", ""classifier__grow_policy"": ""None"", ""classifier__importance_type"": ""None"", ""classifier__interaction_constraints"": ""None"", ""classifier__learning_rate"": ""None"", ""classifier__max_bin"": ""None"", ""classifier__max_cat_threshold"": ""None"", ""classifier__max_cat_to_onehot"": ""None"", ""classifier__max_delta_step"": ""None"", ""classifier__max_depth"": ""None"", ""classifier__max_leaves"": ""None"", ""classifier__min_child_weight"": ""None"", ""classifier__missing"": ""nan"", ""classifier__monotone_constraints"": ""None"", ""classifier__multi_strategy"": ""None"", ""classifier__n_estimators"": ""100"", ""classifier__n_jobs"": ""None"", ""classifier__num_parallel_tree"": ""None"", ""classifier__random_state"": ""42"", ""classifier__reg_alpha"": ""None"", ""classifier__reg_lambda"": ""None"", ""classifier__sampling_method"": ""None"", ""classifier__scale_pos_weight"": ""None"", ""classifier__subsample"": ""None"", ""classifier__tree_method"": ""None"", ""classifier__validate_parameters"": ""None"", ""classifier__verbosity"": ""None""}"
xgboost_hypertuned_model,"[[4397, 3765], [554, 1366]]",0.3128288771921446,0.3874627712381223,0.26622490742545313,0.7114583333333333,"{""Failure (0)"": {""precision"": 0.8881034134518279, ""recall"": 0.5387160009801519, ""f1-score"": 0.6706321970563562, ""support"": 8162.0}, ""Success (1)"": {""precision"": 0.26622490742545313, ""recall"": 0.7114583333333333, ""f1-score"": 0.3874627712381223, ""support"": 1920.0}, ""accuracy"": 0.5716127752430074, ""macro avg"": {""precision"": 0.5771641604386405, ""recall"": 0.6250871671567426, ""f1-score"": 0.5290474841472392, ""support"": 10082.0}, ""weighted avg"": {""precision"": 0.7696738626116534, ""recall"": 0.5716127752430074, ""f1-score"": 0.6167058632365775, ""support"": 10082.0}}",0.5777871454076572,0.5716127752430074,Hyperparameters tuned for imbalance.,"{""memory"": ""None"", ""steps"": ""[('preprocessor', ColumnTransformer(transformers=[('log_and_scale',\n                                 Pipeline(steps=[('log',\n                                                  FunctionTransformer(func=<function log_transform at 0x15e842ac0>,\n                                                                      validate=True)),\n                                                 ('scaler', StandardScaler())]),\n                                 ['amount']),\n                                ('cat', OneHotEncoder(),\n                                 ['country', 'card', 'psp']),\n                                ('binary', 'passthrough', ['3d_secured'])])), ('classifier', XGBClassifier(base_score=None, booster=None, callbacks=None,\n              colsample_bylevel=None, colsample_bynode=None,\n              colsample_bytree=0.724478254120072, device=None,\n              early_stopping_rounds=None, enable_categorical=False,\n              eval_metric=None, feature_types=None, gamma=None,\n              grow_policy=None, importance_type=None,\n              interaction_constraints=None, learning_rate=0.005259243138699339,\n              max_bin=None, max_cat_threshold=None, max_cat_to_onehot=None,\n              max_delta_step=None, max_depth=7, max_leaves=None,\n              min_child_weight=2, missing=nan, monotone_constraints=None,\n              multi_strategy=None, n_estimators=119, n_jobs=None,\n              num_parallel_tree=None, random_state=42, ...))]"", ""verbose"": ""False"", ""preprocessor"": ""ColumnTransformer(transformers=[('log_and_scale',\n                                 Pipeline(steps=[('log',\n                                                  FunctionTransformer(func=<function log_transform at 0x15e842ac0>,\n                                                                      validate=True)),\n                                                 ('scaler', StandardScaler())]),\n                                 ['amount']),\n                                ('cat', OneHotEncoder(),\n                                 ['country', 'card', 'psp']),\n                                ('binary', 'passthrough', ['3d_secured'])])"", ""classifier"": ""XGBClassifier(base_score=None, booster=None, callbacks=None,\n              colsample_bylevel=None, colsample_bynode=None,\n              colsample_bytree=0.724478254120072, device=None,\n              early_stopping_rounds=None, enable_categorical=False,\n              eval_metric=None, feature_types=None, gamma=None,\n              grow_policy=None, importance_type=None,\n              interaction_constraints=None, learning_rate=0.005259243138699339,\n              max_bin=None, max_cat_threshold=None, max_cat_to_onehot=None,\n              max_delta_step=None, max_depth=7, max_leaves=None,\n              min_child_weight=2, missing=nan, monotone_constraints=None,\n              multi_strategy=None, n_estimators=119, n_jobs=None,\n              num_parallel_tree=None, random_state=42, ...)"", ""preprocessor__n_jobs"": ""None"", ""preprocessor__remainder"": ""drop"", ""preprocessor__sparse_threshold"": ""0.3"", ""preprocessor__transformer_weights"": ""None"", ""preprocessor__transformers"": ""[('log_and_scale', Pipeline(steps=[('log',\n                 FunctionTransformer(func=<function log_transform at 0x15e842ac0>,\n                                     validate=True)),\n                ('scaler', StandardScaler())]), ['amount']), ('cat', OneHotEncoder(), ['country', 'card', 'psp']), ('binary', 'passthrough', ['3d_secured'])]"", ""preprocessor__verbose"": ""False"", ""preprocessor__verbose_feature_names_out"": ""True"", ""preprocessor__log_and_scale"": ""Pipeline(steps=[('log',\n                 FunctionTransformer(func=<function log_transform at 0x15e842ac0>,\n                                     validate=True)),\n                ('scaler', StandardScaler())])"", ""preprocessor__cat"": ""OneHotEncoder()"", ""preprocessor__binary"": ""passthrough"", ""preprocessor__log_and_scale__memory"": ""None"", ""preprocessor__log_and_scale__steps"": ""[('log', FunctionTransformer(func=<function log_transform at 0x15e842ac0>, validate=True)), ('scaler', StandardScaler())]"", ""preprocessor__log_and_scale__verbose"": ""False"", ""preprocessor__log_and_scale__log"": ""FunctionTransformer(func=<function log_transform at 0x15e842ac0>, validate=True)"", ""preprocessor__log_and_scale__scaler"": ""StandardScaler()"", ""preprocessor__log_and_scale__log__accept_sparse"": ""False"", ""preprocessor__log_and_scale__log__check_inverse"": ""True"", ""preprocessor__log_and_scale__log__feature_names_out"": ""None"", ""preprocessor__log_and_scale__log__func"": ""<function log_transform at 0x15e842ac0>"", ""preprocessor__log_and_scale__log__inv_kw_args"": ""None"", ""preprocessor__log_and_scale__log__inverse_func"": ""None"", ""preprocessor__log_and_scale__log__kw_args"": ""None"", ""preprocessor__log_and_scale__log__validate"": ""True"", ""preprocessor__log_and_scale__scaler__copy"": ""True"", ""preprocessor__log_and_scale__scaler__with_mean"": ""True"", ""preprocessor__log_and_scale__scaler__with_std"": ""True"", ""preprocessor__cat__categories"": ""auto"", ""preprocessor__cat__drop"": ""None"", ""preprocessor__cat__dtype"": ""<class 'numpy.float64'>"", ""preprocessor__cat__feature_name_combiner"": ""concat"", ""preprocessor__cat__handle_unknown"": ""error"", ""preprocessor__cat__max_categories"": ""None"", ""preprocessor__cat__min_frequency"": ""None"", ""preprocessor__cat__sparse"": ""deprecated"", ""preprocessor__cat__sparse_output"": ""True"", ""classifier__objective"": ""binary:logistic"", ""classifier__base_score"": ""None"", ""classifier__booster"": ""None"", ""classifier__callbacks"": ""None"", ""classifier__colsample_bylevel"": ""None"", ""classifier__colsample_bynode"": ""None"", ""classifier__colsample_bytree"": ""0.724478254120072"", ""classifier__device"": ""None"", ""classifier__early_stopping_rounds"": ""None"", ""classifier__enable_categorical"": ""False"", ""classifier__eval_metric"": ""None"", ""classifier__feature_types"": ""None"", ""classifier__gamma"": ""None"", ""classifier__grow_policy"": ""None"", ""classifier__importance_type"": ""None"", ""classifier__interaction_constraints"": ""None"", ""classifier__learning_rate"": ""0.005259243138699339"", ""classifier__max_bin"": ""None"", ""classifier__max_cat_threshold"": ""None"", ""classifier__max_cat_to_onehot"": ""None"", ""classifier__max_delta_step"": ""None"", ""classifier__max_depth"": ""7"", ""classifier__max_leaves"": ""None"", ""classifier__min_child_weight"": ""2"", ""classifier__missing"": ""nan"", ""classifier__monotone_constraints"": ""None"", ""classifier__multi_strategy"": ""None"", ""classifier__n_estimators"": ""119"", ""classifier__n_jobs"": ""None"", ""classifier__num_parallel_tree"": ""None"", ""classifier__random_state"": ""42"", ""classifier__reg_alpha"": ""None"", ""classifier__reg_lambda"": ""None"", ""classifier__sampling_method"": ""None"", ""classifier__scale_pos_weight"": ""3.8541165142031777"", ""classifier__subsample"": ""0.7212822750999782"", ""classifier__tree_method"": ""None"", ""classifier__validate_parameters"": ""None"", ""classifier__verbosity"": ""None""}"
